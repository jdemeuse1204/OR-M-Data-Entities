/*
Deployment script for Test

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "Test"
:setvar DefaultFilePrefix "Test"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL12.SQLEXPRESS\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL12.SQLEXPRESS\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ANSI_NULLS ON,
                ANSI_PADDING ON,
                ANSI_WARNINGS ON,
                ARITHABORT ON,
                CONCAT_NULL_YIELDS_NULL ON,
                QUOTED_IDENTIFIER ON,
                ANSI_NULL_DEFAULT ON,
                CURSOR_DEFAULT LOCAL,
                RECOVERY FULL 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET PAGE_VERIFY NONE 
            WITH ROLLBACK IMMEDIATE;
    END


GO
USE [$(DatabaseName)];


GO
PRINT N'Rename refactoring operation with key 66585b5c-3abc-474f-828d-0b37d591dfc2 is skipped, element [dbo].[Artist].[,] (SqlSimpleColumn) will not be renamed to FirstName';


GO
PRINT N'Rename refactoring operation with key 4cd99cda-a9a4-4eb1-b915-f8edb13c57ce is skipped, element [dbo].[Artist].[Type] (SqlSimpleColumn) will not be renamed to Genre';


GO
PRINT N'Creating [dbo].[Address]...';


GO
CREATE TABLE [dbo].[Address] (
    [ID]            INT              IDENTITY (1, 1) NOT NULL,
    [Addy]          VARCHAR (100)    NULL,
    [AppointmentID] UNIQUEIDENTIFIER NOT NULL,
    [StateID]       INT              NOT NULL,
    CONSTRAINT [PK_Address] PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating [dbo].[Agent]...';


GO
CREATE TABLE [dbo].[Agent] (
    [Id]   INT          IDENTITY (1, 1) NOT NULL,
    [Name] VARCHAR (50) NULL,
    CONSTRAINT [PK_Agent] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[Album]...';


GO
CREATE TABLE [dbo].[Album] (
    [Id]              UNIQUEIDENTIFIER NOT NULL,
    [Name]            VARCHAR (50)     NULL,
    [TimesDownloaded] INT              NOT NULL,
    [ArtistId]        INT              NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[Appointments]...';


GO
CREATE TABLE [dbo].[Appointments] (
    [ID]          UNIQUEIDENTIFIER NOT NULL,
    [ContactID]   INT              NOT NULL,
    [Description] VARCHAR (50)     NULL,
    [IsScheduled] BIT              NOT NULL,
    CONSTRAINT [PK_Appointments] PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating [dbo].[Artist]...';


GO
CREATE TABLE [dbo].[Artist] (
    [Id]            INT          IDENTITY (1, 1) NOT NULL,
    [FirstName]     VARCHAR (75) NULL,
    [LastName]      VARCHAR (75) NULL,
    [Genre]         VARCHAR (75) NULL,
    [ActiveDate]    DATETIME     NOT NULL,
    [RecordLabelId] INT          NULL,
    [AgentId]       INT          NOT NULL,
    CONSTRAINT [PK_Artist] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[Car]...';


GO
CREATE TABLE [dbo].[Car] (
    [ID]         INT          IDENTITY (1, 1) NOT NULL,
    [Name]       VARCHAR (50) NULL,
    [Make]       VARCHAR (50) NULL,
    [Model]      VARCHAR (50) NULL,
    [Trim]       VARCHAR (50) NULL,
    [Horsepower] INT          NOT NULL,
    CONSTRAINT [PK_Car] PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating [dbo].[Child]...';


GO
CREATE TABLE [dbo].[Child] (
    [ID]   INT          IDENTITY (1, 1) NOT NULL,
    [Name] VARCHAR (50) NULL,
    CONSTRAINT [PK_Child] PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating [dbo].[Computer]...';


GO
CREATE TABLE [dbo].[Computer] (
    [Id]          INT          IDENTITY (1, 1) NOT NULL,
    [Name]        VARCHAR (50) NULL,
    [ProcessorId] INT          NOT NULL,
    [IsCustom]    INT          NOT NULL,
    CONSTRAINT [PK_Computer] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[Contacts]...';


GO
CREATE TABLE [dbo].[Contacts] (
    [ID]              INT              NOT NULL,
    [FirstName]       VARCHAR (50)     NULL,
    [LastName]        VARCHAR (50)     NULL,
    [PhoneID]         INT              NULL,
    [CreatedByUserID] INT              NOT NULL,
    [EditedByUserID]  INT              NOT NULL,
    [Test]            INT              NOT NULL,
    [TestUnique]      UNIQUEIDENTIFIER NOT NULL,
    CONSTRAINT [PK_Contacts] PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating [dbo].[Crust]...';


GO
CREATE TABLE [dbo].[Crust] (
    [Id]        INT          NOT NULL,
    [Name]      VARCHAR (50) NULL,
    [ToppingId] INT          NULL,
    CONSTRAINT [PK_Crust] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[DeliveryMan]...';


GO
CREATE TABLE [dbo].[DeliveryMan] (
    [Id]                  UNIQUEIDENTIFIER NOT NULL,
    [FirstName]           VARCHAR (50)     NULL,
    [LastName]            VARCHAR (50)     NULL,
    [AverageDeliveryTime] INT              NOT NULL,
    [CreateDate]          ROWVERSION       NOT NULL,
    CONSTRAINT [PK_DeliveryMan] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[History]...';


GO
CREATE TABLE [dbo].[History] (
    [Id]          INT          IDENTITY (1, 1) NOT NULL,
    [CreateDate]  ROWVERSION   NOT NULL,
    [Description] VARCHAR (50) NULL,
    [ComputerId]  INT          NOT NULL,
    CONSTRAINT [PK_History] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[Linking]...';


GO
CREATE TABLE [dbo].[Linking] (
    [PolicyId]     INT          NOT NULL,
    [PolicyInfoId] INT          NOT NULL,
    [Description]  VARCHAR (50) NULL,
    CONSTRAINT [PK_Linking] PRIMARY KEY CLUSTERED ([PolicyId] ASC, [PolicyInfoId] ASC)
);


GO
PRINT N'Creating [dbo].[Name]...';


GO
CREATE TABLE [dbo].[Name] (
    [ID]        INT          IDENTITY (1, 1) NOT NULL,
    [Value]     VARCHAR (50) NULL,
    [ContactID] INT          NOT NULL,
    CONSTRAINT [PK_Name] PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating [dbo].[Parent]...';


GO
CREATE TABLE [dbo].[Parent] (
    [ID]          INT IDENTITY (1, 1) NOT NULL,
    [EditedByID]  INT NOT NULL,
    [CreatedByID] INT NOT NULL,
    CONSTRAINT [PK_Parent] PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating [dbo].[Person]...';


GO
CREATE TABLE [dbo].[Person] (
    [ID]            INT          IDENTITY (1, 1) NOT NULL,
    [FirstName]     VARCHAR (50) NULL,
    [LastName]      VARCHAR (50) NULL,
    [StreetAddress] VARCHAR (50) NULL,
    [City]          VARCHAR (50) NULL,
    [State]         VARCHAR (50) NULL,
    [Zip]           VARCHAR (5)  NULL,
    [CarID]         INT          NOT NULL,
    CONSTRAINT [PK_Person] PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating [dbo].[PhoneNumbers]...';


GO
CREATE TABLE [dbo].[PhoneNumbers] (
    [ID]          INT          IDENTITY (1, 1) NOT NULL,
    [Phone]       VARCHAR (20) NULL,
    [PhoneTypeID] INT          NOT NULL,
    CONSTRAINT [PK_PhoneNumbers] PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating [dbo].[PhoneType]...';


GO
CREATE TABLE [dbo].[PhoneType] (
    [ID]   INT          IDENTITY (1, 1) NOT NULL,
    [Type] VARCHAR (50) NULL,
    CONSTRAINT [PK_PhoneType] PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating [dbo].[Pizza]...';


GO
CREATE TABLE [dbo].[Pizza] (
    [Id]            INT              IDENTITY (1, 1) NOT NULL,
    [Name]          VARCHAR (100)    NULL,
    [CookTime]      INT              NOT NULL,
    [ToppingId]     INT              NOT NULL,
    [CrustId]       INT              NOT NULL,
    [DeliveryManId] UNIQUEIDENTIFIER NOT NULL,
    CONSTRAINT [PK_Pizza] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[Policy]...';


GO
CREATE TABLE [dbo].[Policy] (
    [PolicyID]     INT          IDENTITY (1, 1) NOT NULL,
    [FileNumber]   INT          NOT NULL,
    [PolicyTypeID] INT          NOT NULL,
    [StateID]      INT          NULL,
    [County]       VARCHAR (50) NULL,
    [CreatedDate]  DATETIME     NOT NULL,
    [FeeOwnerName] VARCHAR (50) NULL,
    [InsuredName]  VARCHAR (50) NULL,
    [PolicyAmount] DECIMAL (18) NULL,
    [PolicyDate]   DATETIME     NULL,
    [PolicyNumber] VARCHAR (50) NULL,
    [UpdatedDate]  DATETIME     NOT NULL,
    [CreatedBy]    VARCHAR (50) NULL,
    [UpdatedBy]    VARCHAR (50) NULL,
    CONSTRAINT [PK_Policy] PRIMARY KEY CLUSTERED ([PolicyID] ASC)
);


GO
PRINT N'Creating [dbo].[PolicyInfo]...';


GO
CREATE TABLE [dbo].[PolicyInfo] (
    [Id]          INT              NOT NULL,
    [FirstName]   VARCHAR (50)     NULL,
    [LastName]    VARCHAR (50)     NULL,
    [Description] VARCHAR (50)     NULL,
    [Stamp]       UNIQUEIDENTIFIER NOT NULL,
    CONSTRAINT [PK_PolicyInfo] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[PolicyType]...';


GO
CREATE TABLE [dbo].[PolicyType] (
    [ID]   INT          NOT NULL,
    [Name] VARCHAR (50) NULL,
    CONSTRAINT [PK_PolicyType] PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating [dbo].[Processor]...';


GO
CREATE TABLE [dbo].[Processor] (
    [Id]       INT          IDENTITY (1, 1) NOT NULL,
    [Name]     VARCHAR (50) NULL,
    [Cores]    INT          NOT NULL,
    [CoreType] INT          NULL,
    [Speed]    DECIMAL (18) NULL,
    CONSTRAINT [PK_Processor] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[RecordLabel]...';


GO
CREATE TABLE [dbo].[RecordLabel] (
    [Id]   INT          IDENTITY (1, 1) NOT NULL,
    [Name] VARCHAR (50) NULL,
    CONSTRAINT [PK_RecordLabel] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[SchemaChangeOne]...';


GO
CREATE TABLE [dbo].[SchemaChangeOne] (
    [Id]   INT          NOT NULL,
    [Name] VARCHAR (50) NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[StateCode]...';


GO
CREATE TABLE [dbo].[StateCode] (
    [ID]    INT          IDENTITY (1, 1) NOT NULL,
    [Value] VARCHAR (20) NULL,
    CONSTRAINT [PK_StateCode] PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating [dbo].[TestDbGenerationOptionNone]...';


GO
CREATE TABLE [dbo].[TestDbGenerationOptionNone] (
    [Id]   INT          NOT NULL,
    [Test] VARCHAR (50) NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[TestDefaultInsert]...';


GO
CREATE TABLE [dbo].[TestDefaultInsert] (
    [Id]   INT              IDENTITY (1, 1) NOT NULL,
    [Uid]  UNIQUEIDENTIFIER NOT NULL,
    [Name] VARCHAR (50)     NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[TestTryInsert]...';


GO
CREATE TABLE [dbo].[TestTryInsert] (
    [Id]       INT NOT NULL,
    [SecondId] INT NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC, [SecondId] ASC)
);


GO
PRINT N'Creating [dbo].[TestUpdateWithKeyDbGenerationOptionNone]...';


GO
CREATE TABLE [dbo].[TestUpdateWithKeyDbGenerationOptionNone] (
    [Id]   INT          NOT NULL,
    [Name] VARCHAR (50) NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[Topping]...';


GO
CREATE TABLE [dbo].[Topping] (
    [Id]   INT          IDENTITY (1, 1) NOT NULL,
    [Cost] DECIMAL (18) NOT NULL,
    [Name] VARCHAR (50) NULL,
    CONSTRAINT [PK_Topping] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[TryInsert]...';


GO
CREATE TABLE [dbo].[TryInsert] (
    [RefId]  INT NOT NULL,
    [SomeId] INT NOT NULL,
    PRIMARY KEY CLUSTERED ([SomeId] ASC, [RefId] ASC)
);


GO
PRINT N'Creating [dbo].[TryInsertWithGeneration]...';


GO
CREATE TABLE [dbo].[TryInsertWithGeneration] (
    [Id]             INT          NOT NULL,
    [SequenceNumber] INT          NOT NULL,
    [OtherNumber]    INT          IDENTITY (1, 1) NOT NULL,
    [Name]           VARCHAR (50) NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[User]...';


GO
CREATE TABLE [dbo].[User] (
    [ID]   INT          IDENTITY (1, 1) NOT NULL,
    [Name] VARCHAR (50) NULL,
    CONSTRAINT [PK_User] PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating [dbo].[ZipCode]...';


GO
CREATE TABLE [dbo].[ZipCode] (
    [ID]        INT         IDENTITY (1, 1) NOT NULL,
    [Zip5]      VARCHAR (5) NULL,
    [Zip4]      VARCHAR (4) NULL,
    [AddressID] INT         NOT NULL,
    CONSTRAINT [PK_ZipCode] PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating [dbo].[DF_Appointments_IsScheduled]...';


GO
ALTER TABLE [dbo].[Appointments]
    ADD CONSTRAINT [DF_Appointments_IsScheduled] DEFAULT ((0)) FOR [IsScheduled];


GO
PRINT N'Creating [dbo].[DF_Contacts_PhoneID]...';


GO
ALTER TABLE [dbo].[Contacts]
    ADD CONSTRAINT [DF_Contacts_PhoneID] DEFAULT ((0)) FOR [PhoneID];


GO
PRINT N'Creating [dbo].[DF_Contacts_CreatedByUserID]...';


GO
ALTER TABLE [dbo].[Contacts]
    ADD CONSTRAINT [DF_Contacts_CreatedByUserID] DEFAULT ((0)) FOR [CreatedByUserID];


GO
PRINT N'Creating [dbo].[DF_Contacts_EditedByUserID]...';


GO
ALTER TABLE [dbo].[Contacts]
    ADD CONSTRAINT [DF_Contacts_EditedByUserID] DEFAULT ((0)) FOR [EditedByUserID];


GO
PRINT N'Creating [dbo].[DF_Contacts_Test]...';


GO
ALTER TABLE [dbo].[Contacts]
    ADD CONSTRAINT [DF_Contacts_Test] DEFAULT ((0)) FOR [Test];


GO
PRINT N'Creating [dbo].[DF_Contacts_TestUnique]...';


GO
ALTER TABLE [dbo].[Contacts]
    ADD CONSTRAINT [DF_Contacts_TestUnique] DEFAULT (newid()) FOR [TestUnique];


GO
PRINT N'Creating [dbo].[DF_PhoneNumbers_PhoneTypeID]...';


GO
ALTER TABLE [dbo].[PhoneNumbers]
    ADD CONSTRAINT [DF_PhoneNumbers_PhoneTypeID] DEFAULT ((0)) FOR [PhoneTypeID];


GO
PRINT N'Creating [dbo].[DF_Pizza_ToppingId]...';


GO
ALTER TABLE [dbo].[Pizza]
    ADD CONSTRAINT [DF_Pizza_ToppingId] DEFAULT ((0)) FOR [ToppingId];


GO
PRINT N'Creating unnamed constraint on [dbo].[TestDefaultInsert]...';


GO
ALTER TABLE [dbo].[TestDefaultInsert]
    ADD DEFAULT newid() FOR [Uid];


GO
PRINT N'Creating [dbo].[FK_Address_Appointments]...';


GO
ALTER TABLE [dbo].[Address] WITH NOCHECK
    ADD CONSTRAINT [FK_Address_Appointments] FOREIGN KEY ([AppointmentID]) REFERENCES [dbo].[Appointments] ([ID]);


GO
PRINT N'Creating [dbo].[FK_Address_StateCode]...';


GO
ALTER TABLE [dbo].[Address] WITH NOCHECK
    ADD CONSTRAINT [FK_Address_StateCode] FOREIGN KEY ([StateID]) REFERENCES [dbo].[StateCode] ([ID]);


GO
PRINT N'Creating [dbo].[FK_Album_ArtistId]...';


GO
ALTER TABLE [dbo].[Album] WITH NOCHECK
    ADD CONSTRAINT [FK_Album_ArtistId] FOREIGN KEY ([ArtistId]) REFERENCES [dbo].[Artist] ([Id]);


GO
PRINT N'Creating [dbo].[FK_Appointments_Contacts]...';


GO
ALTER TABLE [dbo].[Appointments] WITH NOCHECK
    ADD CONSTRAINT [FK_Appointments_Contacts] FOREIGN KEY ([ContactID]) REFERENCES [dbo].[Contacts] ([ID]);


GO
PRINT N'Creating [dbo].[FK_Contacts_Table_1]...';


GO
ALTER TABLE [dbo].[Appointments] WITH NOCHECK
    ADD CONSTRAINT [FK_Contacts_Table_1] FOREIGN KEY ([ID]) REFERENCES [dbo].[Appointments] ([ID]);


GO
PRINT N'Creating [dbo].[FK_Artist_RecordLabelId]...';


GO
ALTER TABLE [dbo].[Artist] WITH NOCHECK
    ADD CONSTRAINT [FK_Artist_RecordLabelId] FOREIGN KEY ([RecordLabelId]) REFERENCES [dbo].[RecordLabel] ([Id]);


GO
PRINT N'Creating [dbo].[FK_Artist_AgentId]...';


GO
ALTER TABLE [dbo].[Artist] WITH NOCHECK
    ADD CONSTRAINT [FK_Artist_AgentId] FOREIGN KEY ([AgentId]) REFERENCES [dbo].[Agent] ([Id]);


GO
PRINT N'Creating [dbo].[FK_Comuputer_ProcessorId]...';


GO
ALTER TABLE [dbo].[Computer] WITH NOCHECK
    ADD CONSTRAINT [FK_Comuputer_ProcessorId] FOREIGN KEY ([ProcessorId]) REFERENCES [dbo].[Processor] ([Id]);


GO
PRINT N'Creating [dbo].[FK_Contacts_PhoneNumbers]...';


GO
ALTER TABLE [dbo].[Contacts] WITH NOCHECK
    ADD CONSTRAINT [FK_Contacts_PhoneNumbers] FOREIGN KEY ([PhoneID]) REFERENCES [dbo].[PhoneNumbers] ([ID]);


GO
PRINT N'Creating [dbo].[FK_Crust_ToppingId]...';


GO
ALTER TABLE [dbo].[Crust] WITH NOCHECK
    ADD CONSTRAINT [FK_Crust_ToppingId] FOREIGN KEY ([ToppingId]) REFERENCES [dbo].[Topping] ([Id]);


GO
PRINT N'Creating [dbo].[FK_History_ComputerId]...';


GO
ALTER TABLE [dbo].[History] WITH NOCHECK
    ADD CONSTRAINT [FK_History_ComputerId] FOREIGN KEY ([ComputerId]) REFERENCES [dbo].[Computer] ([Id]);


GO
PRINT N'Creating [dbo].[FK_Name_Contacts]...';


GO
ALTER TABLE [dbo].[Name] WITH NOCHECK
    ADD CONSTRAINT [FK_Name_Contacts] FOREIGN KEY ([ContactID]) REFERENCES [dbo].[Contacts] ([ID]);


GO
PRINT N'Creating [dbo].[FK_DeliveryMan_DeliveryManId]...';


GO
ALTER TABLE [dbo].[Pizza] WITH NOCHECK
    ADD CONSTRAINT [FK_DeliveryMan_DeliveryManId] FOREIGN KEY ([DeliveryManId]) REFERENCES [dbo].[DeliveryMan] ([Id]);


GO
PRINT N'Creating [dbo].[FK_Pizza_CrustId]...';


GO
ALTER TABLE [dbo].[Pizza] WITH NOCHECK
    ADD CONSTRAINT [FK_Pizza_CrustId] FOREIGN KEY ([CrustId]) REFERENCES [dbo].[Crust] ([Id]);


GO
PRINT N'Creating [dbo].[FK_Topping_ToppingId]...';


GO
ALTER TABLE [dbo].[Pizza] WITH NOCHECK
    ADD CONSTRAINT [FK_Topping_ToppingId] FOREIGN KEY ([ToppingId]) REFERENCES [dbo].[Topping] ([Id]);


GO
PRINT N'Creating [dbo].[FK_ZipCode_Address]...';


GO
ALTER TABLE [dbo].[ZipCode] WITH NOCHECK
    ADD CONSTRAINT [FK_ZipCode_Address] FOREIGN KEY ([AddressID]) REFERENCES [dbo].[Address] ([ID]);


GO
PRINT N'Creating [dbo].[GetLastName]...';


GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date, ,>
-- Description:	<Description, ,>
-- =============================================
CREATE FUNCTION [dbo].[GetLastName]
(
	-- Add the parameters for the function here
	@Id int,
	@FirstName varchar(100)
)
RETURNS varchar(100)
AS
BEGIN
	-- Declare the return variable here
	Declare @Result as varchar(100)
	Set @Result = (Select Top 1 LastName From Contacts Where Id = @Id And FirstName = @FirstName)
	Return @Result
END
GO
PRINT N'Creating [dbo].[GetLastName2]...';


GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date, ,>
-- Description:	<Description, ,>
-- =============================================
CREATE FUNCTION [dbo].[GetLastName2]
(
	-- Add the parameters for the function here
	@Id int
)
RETURNS varchar(100)
AS
BEGIN
	-- Declare the return variable here
	Declare @Result as varchar(100)
	Set @Result = (Select Top 1 LastName From Contacts Where Id = @Id)
	Return @Result
END
GO
PRINT N'Creating [dbo].[GetFirstName]...';


GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE GetFirstName @Id int
AS
SELECT * 
FROM Contacts
WHERE Id = @Id
GO
PRINT N'Creating [dbo].[UpdateFirstName]...';


GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
Create PROCEDURE [dbo].[UpdateFirstName] @Id int, @FirstName as varchar(100)
AS
Update Contacts
Set FirstName = @FirstName
WHERE Id = @Id
GO
-- Refactoring step to update target server with deployed transaction logs

IF OBJECT_ID(N'dbo.__RefactorLog') IS NULL
BEGIN
    CREATE TABLE [dbo].[__RefactorLog] (OperationKey UNIQUEIDENTIFIER NOT NULL PRIMARY KEY)
    EXEC sp_addextendedproperty N'microsoft_database_tools_support', N'refactoring log', N'schema', N'dbo', N'table', N'__RefactorLog'
END
GO
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '66585b5c-3abc-474f-828d-0b37d591dfc2')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('66585b5c-3abc-474f-828d-0b37d591dfc2')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '4cd99cda-a9a4-4eb1-b915-f8edb13c57ce')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('4cd99cda-a9a4-4eb1-b915-f8edb13c57ce')

GO

GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
ALTER TABLE [dbo].[Address] WITH CHECK CHECK CONSTRAINT [FK_Address_Appointments];

ALTER TABLE [dbo].[Address] WITH CHECK CHECK CONSTRAINT [FK_Address_StateCode];

ALTER TABLE [dbo].[Album] WITH CHECK CHECK CONSTRAINT [FK_Album_ArtistId];

ALTER TABLE [dbo].[Appointments] WITH CHECK CHECK CONSTRAINT [FK_Appointments_Contacts];

ALTER TABLE [dbo].[Appointments] WITH CHECK CHECK CONSTRAINT [FK_Contacts_Table_1];

ALTER TABLE [dbo].[Artist] WITH CHECK CHECK CONSTRAINT [FK_Artist_RecordLabelId];

ALTER TABLE [dbo].[Artist] WITH CHECK CHECK CONSTRAINT [FK_Artist_AgentId];

ALTER TABLE [dbo].[Computer] WITH CHECK CHECK CONSTRAINT [FK_Comuputer_ProcessorId];

ALTER TABLE [dbo].[Contacts] WITH CHECK CHECK CONSTRAINT [FK_Contacts_PhoneNumbers];

ALTER TABLE [dbo].[Crust] WITH CHECK CHECK CONSTRAINT [FK_Crust_ToppingId];

ALTER TABLE [dbo].[History] WITH CHECK CHECK CONSTRAINT [FK_History_ComputerId];

ALTER TABLE [dbo].[Name] WITH CHECK CHECK CONSTRAINT [FK_Name_Contacts];

ALTER TABLE [dbo].[Pizza] WITH CHECK CHECK CONSTRAINT [FK_DeliveryMan_DeliveryManId];

ALTER TABLE [dbo].[Pizza] WITH CHECK CHECK CONSTRAINT [FK_Pizza_CrustId];

ALTER TABLE [dbo].[Pizza] WITH CHECK CHECK CONSTRAINT [FK_Topping_ToppingId];

ALTER TABLE [dbo].[ZipCode] WITH CHECK CHECK CONSTRAINT [FK_ZipCode_Address];


GO
PRINT N'Update complete.';


GO
